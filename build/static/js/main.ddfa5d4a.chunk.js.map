{"version":3,"sources":["Components/Dashboard/Dashboard.jsx","core.js","Components/Signup/Signup.jsx","Components/Login/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","c","localStorage","getItem","JSON","parse","name","email","baseUrl","window","location","hostname","split","validationSchema","yup","required","password","min","max","Signup","formik","useFormik","initialValues","onSubmit","values","axios","post","then","res","console","log","data","alert","catch","err","style","margin","handleSubmit","Stack","spacing","TextField","fullWidth","color","id","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","Login","history","useHistory","setItem","stringify","push","App","Navbar","bg","Container","Brand","onClick","Nav","className","Link","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddfa5d4a.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Dashboard() {\n    let c=localStorage.getItem('user')\n    c=JSON.parse(c)\n    if(c){\n    return (\n        <div>\n          <h1>{c.name}</h1>\n          <h1>{c.email}</h1>\n        </div>\n    )\n}\nelse{\n    return (\n        <div>\n          You need to Login first\n        </div>\n    )  \n}\n}\n\nexport default Dashboard\n\n","const dev = \"http://localhost:5000\"\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport * as yup from \"yup\";\nimport { baseUrl } from \"./../../core\";\n\nconst validationSchema = yup.object({\n  name: yup.string(\"Enter your name\").required(\"Name is required\"),\n  email: yup\n    .string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  password: yup\n    .string(\"Enter your password\")\n    .min(8, \"Password should be of minimum 8 characters length\")\n    .max(10, \"No more then 10\")\n    .required(\"Password is required\"),\n});\n\nfunction Signup() {\n  const formik = useFormik({\n    validationSchema: validationSchema,\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: function (values) {\n      axios\n        .post(`${baseUrl}/api/v1/signup`, {\n          name: values.name,\n          email: values.email,\n          password: values.password,\n        })\n        .then((res) => {\n          console.log(\"res: \", res.data);\n          alert(\"Signup Successfully\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  });\n\n  return (\n    <div style={{ margin: \"2rem\" }}>\n      <h1>Signup page</h1>\n\n      <form onSubmit={formik.handleSubmit}>\n        <Stack spacing={2}>\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"outlined-basic\"\n            label=\"Full Name\"\n            variant=\"outlined\"\n            name=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"outlined-basic\"\n            label=\"Email\"\n            variant=\"outlined\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"filled-basic\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">\n            Signup\n          </Button>\n        </Stack>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport * as yup from \"yup\";\nimport { baseUrl } from \"./../../core\";\n\nconst validationSchema = yup.object({\n  email: yup\n    .string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  password: yup\n    .string(\"Enter your password\")\n    .min(8, \"Password should be of minimum 8 characters length\")\n    .max(10, \"No more then 10\")\n    .required(\"Password is required\"),\n});\n\nfunction Login() {\n  let history = useHistory();\n\n  const formik = useFormik({\n    validationSchema: validationSchema,\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: function (values) {\n      console.log(\"values: \", values);\n\n      axios\n        .post(`${baseUrl}/api/v1/login`, {\n          email: values.email,\n          password: values.password,\n        })\n        .then((res) => {\n          console.log(\"res: \", res.data);\n        \n          if (res.data.email) {\n            localStorage.setItem('user',JSON.stringify(res.data))\n            alert(\"Signin Successfully\");\n            history.push(\"/\");\n          }\n          else{\n            alert(res.data)\n          }\n        });\n    },\n  });\n\n  return (\n    <div style={{ margin: \"2rem\" }}>\n      <h1>Login page</h1>\n\n      <form onSubmit={formik.handleSubmit}>\n        <Stack spacing={2}>\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"outlined-basic\"\n            label=\"Email\"\n            variant=\"outlined\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"filled-basic\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </Stack>\n      </form>\n    </div>\n  );\n}\nexport default Login;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport Signup from \"./Components/Signup/Signup\";\nimport Login from \"./Components/Login/Login\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\n\nfunction App() {\n  let history = useHistory();\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand\n            onClick={() => {\n              history.push(\"/\");\n            }}\n          >\n            Database\n          </Navbar.Brand>\n          <Nav className=\"me-auto\">\n            <Nav.Link\n              onClick={() => {\n                history.push(\"/\");\n              }}\n            >\n              Dashboard\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                history.push(\"/Sign\");\n              }}\n            >\n              Signup\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                history.push(\"/Log\");\n              }}\n            >\n              Login\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n      <Switch>\n        <Route path=\"/Log\">\n          <Login />\n        </Route>\n\n        <Route path=\"/Sign\">\n          <Signup />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}